{
  "agent_types": {
    "planner": {
      "name": "Intelligent Planner",
      "description": "Analyzes requirements and creates dynamic task plans with optimal agent assignments",
      "capabilities": [
        "Requirements analysis",
        "Domain detection",
        "Task planning",
        "Agent assignment",
        "Complexity assessment",
        "Technology recommendation",
        "Risk analysis",
        "Effort estimation"
      ],
      "specializations": {
        "domains": ["ecommerce", "content_management", "project_management", "social_platform", "learning_management", "fintech", "healthcare", "iot", "api_platform", "analytics"],
        "architectures": ["monolith", "microservices", "serverless", "modular_monolith"],
        "complexity_levels": ["low", "medium", "high"],
        "scale_targets": ["small", "medium", "large"]
      },
      "tools": [
        "requirement_parser",
        "domain_classifier",
        "complexity_analyzer",
        "tech_stack_recommender",
        "task_dependency_resolver"
      ],
      "output_formats": [
        "requirements_analysis",
        "dynamic_task_plans",
        "agent_assignments",
        "technology_recommendations"
      ]
    },
    "architect": {
      "name": "System Architect",
      "description": "Designs system architecture and makes technical decisions",
      "capabilities": [
        "System design",
        "Technology stack selection",
        "Database schema design",
        "API specification",
        "Architecture documentation",
        "Scalability planning",
        "Security architecture",
        "Performance optimization"
      ],
      "specializations": {
        "patterns": ["mvc", "microservices", "event_driven", "layered", "hexagonal"],
        "databases": ["postgresql", "mongodb", "redis", "elasticsearch"],
        "technologies": ["node_js", "python", "java", "go", "rust"],
        "cloud_platforms": ["aws", "gcp", "azure", "docker"]
      },
      "tools": [
        "architectural_patterns",
        "technology_assessment",
        "scalability_analysis",
        "security_frameworks"
      ],
      "output_formats": [
        "architecture_documents",
        "technical_specifications",
        "design_diagrams",
        "database_schemas"
      ]
    },
    "developer": {
      "name": "Software Developer", 
      "description": "Implements code based on architectural specifications with domain-specific expertise",
      "capabilities": [
        "Code implementation",
        "Database integration",
        "API development",
        "Frontend development",
        "Code optimization",
        "Authentication systems",
        "Payment integration",
        "Real-time features",
        "File handling",
        "Security implementation"
      ],
      "specializations": {
        "languages": ["javascript", "typescript", "python", "java", "go"],
        "backend_frameworks": ["express", "fastapi", "spring", "gin", "django"],
        "frontend_frameworks": ["react", "vue", "angular", "svelte"],
        "databases": ["postgresql", "mongodb", "redis", "sqlite"],
        "features": ["authentication", "payments", "real_time", "file_upload", "search", "notifications"]
      },
      "tools": [
        "programming_languages",
        "frameworks",
        "development_environments",
        "package_managers",
        "build_tools"
      ],
      "output_formats": [
        "source_code",
        "configuration_files",
        "build_scripts",
        "deployment_configs"
      ]
    },
    "tester": {
      "name": "Quality Assurance Tester",
      "description": "Creates comprehensive test suites adapted to application domain and complexity",
      "capabilities": [
        "Unit test creation",
        "Integration testing",
        "End-to-end testing",
        "Performance testing",
        "Test automation",
        "Security testing",
        "Load testing",
        "API testing",
        "UI testing",
        "Database testing"
      ],
      "specializations": {
        "test_types": ["unit", "integration", "e2e", "performance", "security", "load"],
        "frameworks": ["jest", "cypress", "selenium", "mocha", "pytest", "junit"],
        "tools": ["playwright", "puppeteer", "k6", "artillery"],
        "domains": ["web_apps", "apis", "mobile_apps", "microservices"]
      },
      "tools": [
        "testing_frameworks",
        "test_runners",
        "coverage_tools",
        "performance_tools",
        "security_scanners"
      ],
      "output_formats": [
        "test_suites",
        "test_reports",
        "coverage_reports",
        "performance_reports"
      ]
    },
    "documenter": {
      "name": "Technical Documenter",
      "description": "Creates comprehensive documentation tailored to application domain and target audience",
      "capabilities": [
        "Technical documentation",
        "User guides",
        "API documentation",
        "Deployment guides",
        "Code comments",
        "Architecture documentation",
        "Troubleshooting guides",
        "Installation instructions",
        "Configuration guides"
      ],
      "specializations": {
        "document_types": ["technical", "user", "api", "deployment", "troubleshooting"],
        "formats": ["markdown", "html", "pdf", "interactive"],
        "audiences": ["developers", "end_users", "administrators", "stakeholders"],
        "domains": ["web_apps", "apis", "mobile_apps", "enterprise_software"]
      },
      "tools": [
        "documentation_generators",
        "markdown_processors",
        "diagram_tools",
        "api_doc_generators",
        "screenshot_tools"
      ],
      "output_formats": [
        "documentation_files",
        "user_manuals",
        "deployment_guides",
        "api_references",
        "installation_guides"
      ]
    },
    "business_analyst": {
      "name": "Business Analyst",
      "description": "Analyzes market potential, business risks, and feasibility of applications",
      "capabilities": [
        "Market research",
        "Competitive analysis", 
        "Risk assessment",
        "Business model validation",
        "ROI analysis",
        "User persona development",
        "Feature prioritization",
        "Monetization strategy",
        "Feasibility analysis",
        "Stakeholder analysis",
        "Requirements validation",
        "Business case development"
      ],
      "specializations": {
        "domains": ["ecommerce", "fintech", "healthcare", "saas", "social_platform", "iot", "analytics"],
        "analysis_types": ["market_size", "competition", "risks", "opportunities", "swot", "feasibility"],
        "methodologies": ["swot_analysis", "porter_five_forces", "lean_canvas", "business_model_canvas", "jobs_to_be_done"],
        "market_segments": ["b2b", "b2c", "b2b2c", "enterprise", "smb", "consumer"],
        "revenue_models": ["subscription", "freemium", "marketplace", "licensing", "advertising", "transaction_fees"]
      },
      "tools": [
        "market_research_tools",
        "competitive_intelligence",
        "business_model_frameworks",
        "financial_modeling",
        "persona_development"
      ],
      "output_formats": [
        "market_analysis",
        "business_plan",
        "risk_assessment", 
        "competitive_analysis",
        "user_personas",
        "feature_roadmap",
        "financial_projections",
        "business_model_canvas"
      ]
    },
    "devops": {
      "name": "DevOps Engineer",
      "description": "Handles deployment, infrastructure, and operational concerns",
      "capabilities": [
        "Containerization",
        "CI/CD pipeline setup",
        "Infrastructure as code",
        "Monitoring setup",
        "Security configuration",
        "Database deployment",
        "Load balancing",
        "Backup strategies"
      ],
      "specializations": {
        "platforms": ["docker", "kubernetes", "aws", "gcp", "azure"],
        "tools": ["terraform", "ansible", "jenkins", "github_actions", "gitlab_ci"],
        "monitoring": ["prometheus", "grafana", "elk_stack", "datadog"],
        "databases": ["postgresql", "mongodb", "redis"]
      },
      "tools": [
        "containerization_tools",
        "orchestration_platforms",
        "cicd_systems",
        "monitoring_tools",
        "infrastructure_tools"
      ],
      "output_formats": [
        "dockerfile",
        "docker_compose",
        "kubernetes_manifests",
        "cicd_configs",
        "infrastructure_code"
      ]
    }
  },
  "execution_settings": {
    "max_parallel_agents": 4,
    "task_timeout": "45m",
    "retry_failed_tasks": true,
    "max_retries": 3,
    "log_level": "info",
    "intelligent_planning": true,
    "dynamic_agent_assignment": true,
    "adaptive_task_creation": true
  },
  "planning_settings": {
    "enable_domain_detection": true,
    "enable_complexity_analysis": true,
    "enable_tech_stack_recommendation": true,
    "enable_risk_assessment": true,
    "minimum_tasks_per_phase": 2,
    "maximum_tasks_per_phase": 8,
    "prefer_specialized_agents": true
  },
  "assignment_rules": {
    "capability_matching": {
      "weight": 0.4,
      "strict_requirements": ["authentication", "payment", "security"]
    },
    "specialization_matching": {
      "weight": 0.3,
      "domain_bonus": 0.2
    },
    "workload_balancing": {
      "weight": 0.2,
      "max_tasks_per_agent": 6
    },
    "dependency_optimization": {
      "weight": 0.1,
      "prefer_same_agent_for_related_tasks": true
    }
  },
  "communication": {
    "artifact_sharing": true,
    "inter_agent_messaging": false,
    "shared_workspace": true,
    "requirement_propagation": true,
    "context_preservation": true
  },
  "quality_gates": {
    "architecture_review": true,
    "code_review": true,
    "test_coverage_minimum": 80,
    "security_scan": true,
    "documentation_completeness": true
  }
}